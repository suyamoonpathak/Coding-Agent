openapi: 3.0.3
info:
  title: Coding Agent Platform APIs
  version: 0.1.0
  description: |
    Consolidated API specification for the Coding Agent platform.
    Services:
      - Model service (LLM inference)
      - Execution gateway (user-facing run API)
      - Runner service (isolated container execution)
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.coding-agent.local
    description: Default API endpoint
  - url: http://localhost:{port}
    description: Local development
    variables:
      port:
        default: '8000'
        enum: ['8000', '5000', '5100']

# No auth required for these endpoints for now
security: []

tags:
  - name: meta
    description: Health, readiness, and metrics
  - name: model
    description: LLM inference endpoints
  - name: execution
    description: User-facing code execution gateway
  - name: runner
    description: Low-level code runner (ephemeral containers)

paths:
  /healthz:
    get:
      tags: [meta]
      summary: Liveness probe
      operationId: healthz
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
        '400':
          description: Bad request
        '503':
          description: Service unavailable

  /readyz:
    get:
      tags: [meta]
      summary: Readiness probe
      operationId: readyz
      responses:
        '200':
          description: Ready status
          content:
            application/json:
              schema:
                type: object
                properties:
                  ready:
                    type: boolean
        '400':
          description: Bad request

  /metrics:
    get:
      tags: [meta]
      summary: Prometheus metrics
      operationId: metrics
      responses:
        '200':
          description: Prometheus text format
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Bad request

  /generate_code:
    post:
      tags: [model]
      summary: Generate code from a prompt
      operationId: generateCode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptRequest'
      responses:
        '200':
          description: Generated code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateCodeResponse'
        '400':
          description: Bad request

  /generate_code_stream:
    post:
      tags: [model]
      summary: Generate code (streaming)
      description: Streams generated text tokens as they are produced
      operationId: generateCodeStream
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptRequest'
      responses:
        '200':
          description: Chunked text stream
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Bad request

  /execute_code:
    post:
      tags: [execution]
      summary: Execute user code (gateway)
      operationId: executeCode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeRequest'
      responses:
        '200':
          description: Execution result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteResponse'
        '400':
          description: Bad request

  /execute_code_stream:
    post:
      tags: [execution]
      summary: Execute user code (streaming)
      operationId: executeCodeStream
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeRequest'
      responses:
        '200':
          description: Chunked logs stream; ends with a JSON line containing exit_code and duration_ms
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Bad request

  /run:
    post:
      tags: [runner]
      summary: Execute code in an ephemeral container
      operationId: runnerRun
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunRequest'
      responses:
        '200':
          description: Runner result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunnerResponse'
        '400':
          description: Bad request
        '500':
          description: Runner or Docker error

  /run_stream:
    post:
      tags: [runner]
      summary: Execute code in an ephemeral container (streaming)
      operationId: runnerRunStream
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunRequest'
      responses:
        '200':
          description: Chunked log stream ending with a JSON line containing exit_code and duration_ms
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Bad request

components:
  schemas:
    PromptRequest:
      type: object
      properties:
        prompt:
          type: string
        max_new_tokens:
          type: integer
          minimum: 1
          maximum: 1024
          default: 256
        temperature:
          type: number
          minimum: 0
          default: 0.2
        top_p:
          type: number
          minimum: 0
          maximum: 1
          default: 0.95
        stop:
          type: array
          items:
            type: string
      required:
        - prompt

    GenerateCodeResponse:
      type: object
      properties:
        generated_code:
          type: string
      required:
        - generated_code

    CodeRequest:
      type: object
      properties:
        code:
          type: string
        language:
          type: string
          enum: [python]
          default: python
        timeout_seconds:
          type: integer
          minimum: 1
          maximum: 120
          default: 10
        memory_mb:
          type: integer
          minimum: 64
          maximum: 2048
          default: 256
        cpu_millis:
          type: integer
          minimum: 100
          maximum: 2000
          default: 500
      required:
        - code

    ExecuteResponse:
      type: object
      properties:
        logs:
          type: string
        exit_code:
          type: integer
        duration_ms:
          type: integer

    RunRequest:
      type: object
      properties:
        code:
          type: string
        language:
          type: string
          enum: [python]
          default: python
        timeout_seconds:
          type: integer
          minimum: 1
          maximum: 120
          default: 10
        memory_mb:
          type: integer
          minimum: 64
          maximum: 2048
          default: 256
        cpu_millis:
          type: integer
          minimum: 100
          maximum: 2000
          default: 500
      required:
        - code

    RunnerResponse:
      type: object
      properties:
        exit_code:
          type: integer
        logs:
          type: string
        duration_ms:
          type: integer

