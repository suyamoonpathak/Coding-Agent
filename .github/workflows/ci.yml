name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Python deps
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
      - name: Lint fast check (import sanity)
        run: |
          python -c "import fastapi, pydantic" || true
      - name: Run backend tests (health-only)
        env:
          MODEL_BASE_URL: http://localhost:8000
          EXEC_BASE_URL: http://localhost:5000
          RUNNER_BASE_URL: http://localhost:5100
        run: |
          echo 'Skipping live service tests in CI (no services started)'
          echo 'Add service containers and integration tests later.'

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build images
        run: |
          docker build -t coding-agent-exec:ci ./backend/src/execution
          docker build -t coding-agent-model:ci ./backend/src/models
          docker build -t coding-agent-frontend:ci ./frontend/coding-agent-frontend
      - name: Docker metadata (placeholder)
        run: echo "Images built"

  openapi:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Lint OpenAPI with Redocly
        run: |
          npx --yes @redocly/cli@1.28.2 lint openapi.yaml
      - name: Build Redoc static docs
        run: |
          npx --yes @redocly/cli@1.28.2 build-docs openapi.yaml -o site/index.html
      - name: Configure Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy-pages:
    needs: openapi
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

